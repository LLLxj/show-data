kind: Service
apiVersion: v1
metadata:
  name: program_name
  namespace: namespaceenv
spec:
  selector:
    app: program_name
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: program_name
  namespace: namespaceenv
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: program_name
spec:
  replicas: replicaset
  selector:
    matchLabels:
      app: program_name
  template:
    metadata:
      labels:
        app: program_name
    spec:
      imagePullSecrets:
      - name: program_name
      containers:
      - name: program_name
        image: 192.168.99.11:7000/front/program_name:tag
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "30"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: Host
              value: domain_name
            path: /
            port: 443
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: Host
              value: domain_name
            path: /
            port: 443
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 2
          timeoutSeconds: 2
        ports:
        - containerPort: 443
        volumeMounts:
        - name: tool-admin
          mountPath: /etc/nginx/conf.d/
          readOnly: true
      volumes:
      - name: tool-admin
        configMap:
          name: tool-admin
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: program_name
  namespace: namespaceenv
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - domain_name
    secretName: ecsoso
  rules:
  - host: domain_name
    http:
      paths:
      - path: /
        backend:
          serviceName: program_name
          servicePort: 443
